[
  {
      "node_type": "Function",
      "ref_id": "test_ref_id",
      "properties": {
          "file": "stakwork/demo-repo/db.go",
          "node_key": "function-newperson-stakworkdemorepodbgo-26",
          "name": "NewPerson",
          "start": 26,
          "end": 28,
          "body": "func (db database) NewPerson(p Person) error {\n\treturn db.db.Create(&p).Error\n}",
          "operand": "database"
      }
  },
  {
      "node_type": "Function",
      "ref_id": "test_ref_id",
      "properties": {
          "file": "stakwork/demo-repo/frontend/src/components/NewPerson.tsx",
          "node_key": "function-newperson-stakworkdemorepofrontendsrccomponentsnewpersontsx-52",
          "name": "NewPerson",
          "start": 52,
          "end": 111,
          "body": "function NewPerson() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const newPerson = {\n      name: name,\n      email: email,\n    };\n\n    try {\n      const response = await fetch(`${api.host}/person`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newPerson),\n      });\n\n      if (!response.ok) {\n        console.error('Failed to add new person:', response.statusText);\n        return;\n      }\n\n      const data = await response.json();\n      console.log('New person added:', data);\n    } catch (error) {\n      console.error('Error adding new person:', error);\n    }\n  };\n\n  return (\n    <FormContainer>\n      <FormTitle>Add New Person</FormTitle>\n      <form onSubmit={handleSubmit}>\n        <FormGroup>\n          <Label>Name:</Label>\n          <Input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label>Email:</Label>\n          <Input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </FormGroup>\n        <SubmitButton type=\"submit\">Add Person</SubmitButton>\n      </form>\n    </FormContainer>\n  );\n}"
      }
  }
]